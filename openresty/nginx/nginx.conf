user nobody nogroup;
load_module modules/ngx_http_lua_cache_module.so;
include env_vars.conf;

worker_processes  2;
events {
    worker_connections  2048;
}

http {
    include mime.types;
    variables_hash_max_size 2048;
    variables_hash_bucket_size 128;
    # set search paths for pure Lua external libraries (';;' is the default path):
    lua_package_path '${prefix}../lualib/user_code/?.lua;${prefix}../luajit/share/lua/5.1/ngx-oauth/?.lua;;';
    lua_package_cpath '${prefix}../openssl/lib/?.so;;';
    init_by_lua_file '../lualib/user_code/init_phase.lua';
    init_worker_by_lua_file '../lualib/user_code/init_worker_phase.lua';
    
    # Path of the file with trusted CA certificates.
    lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

    # The verification depth in the server certificates chain.
    lua_ssl_verify_depth 3;

    proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=api_cache:50m max_size=3000m inactive=600m;
    lua_shared_dict cache_tags 10m;
    
    # a shorter log format for development
    log_format development '[$time_local] "$request" $status $body_bytes_sent "$request_time ms"';
    
    include resolver.conf;
    
    map $arg_provider $unknown_oauth_provider {
        google        0;
        github        0;
        facebook      0;
        default       1;
    }
    map $development $error_level {
        0 error;
        1 info;
    }

    map $http_content_type $request_content_type {
        text/csv text/csv;
        default application/json;
    }
    server {
        listen 80 default_server;
        listen 443 default_server http2 ssl;
        ssl_certificate certificate.crt;
        ssl_certificate_key certificate.key;
        server_name _;
        charset utf-8;

        #depending the env (production/development) switch between log formats
        set_by_lua_block $development  { return os.getenv('DEVELOPMENT') or "0" }
        set $log_development 0;
        set $log_production 0;
        if ($development = "1") {
            set $log_development 1;
        }
        if ($development = "0") {
            set $log_production 1;
        }
        # access_log /dev/stdout combined buffer=64k if=$log_production;
        access_log /dev/stdout combined if=$log_production;
        access_log /dev/stdout development if=$log_development;
        
        # enable gzip compression
        gzip on;
        gzip_disable "msie6";
        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_types text/plain text/css application/json application/vnd.pgrst.object+json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        
        include rest.conf;
        include graphql.conf;
        include redis.conf;
        include oauth.conf;

        # this is the last location in the chain that points to html directory
        # this is where the files of your frontend application would go (html/javascript/css)
        location / {
            root   html;
            index  index.html index.htm;
        }
    }
}
