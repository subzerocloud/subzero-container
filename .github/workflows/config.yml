name: ci

# Run this workflow every time a new commit pushed to your repository
on: 
  push:
    branches: main
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
env:
  POSTGREST_TAG: v7.0.1.7
  OPENRESTY_TAG: 1.19.3.1-alpine-v2.2
  PRODUCTION_REGISTRY: ${{ secrets.PRODUCTION_REGISTRY }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - 
        name: Build subzero image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          load: true
          push: false
          tags: subzerocloud/subzero-development
          build-args: |
            POSTGREST_TAG=${{ env.POSTGREST_TAG }}
            REGISTRY=subzerocloud
            DEVELOPMENT_BUILD=-development
      -
        name: Bring up docker-compose
        run: |
          docker-compose down
          docker-compose up -d
      - 
        name: yarn install
        run: yarn install
      -
        name: run tests
        run: yarn test
      -
        name: shutdown
        run: docker-compose down
      
  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      -
        name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - 
        name: Checkout repository
        uses: actions/checkout@v2
      -
        name: Login to subZero registry
        uses: docker/login-action@v1
        with:
          registry: registry.subzero.cloud
          username: ${{ secrets.SUBZERO_EMAIL }}
          password: ${{ secrets.SUBZERO_PASSWORD }}
      -
        name: Login to Docker Hub registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.PRODUCTION_REGISTRY }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: Build subzero production image
        run: |
          docker build \
            --build-arg REGISTRY=registry.subzero.cloud \
            --build-arg DEVELOPMENT_BUILD= \
            --build-arg POSTGREST_TAG=$POSTGREST_TAG \
            --build-arg OPENRESTY_TAG=$OPENRESTY_TAG \
            -t $PRODUCTION_REGISTRY/subzero .
      -
        name: Build subzero development image
        run: |
          docker build \
            --build-arg REGISTRY=subzerocloud \
            --build-arg DEVELOPMENT_BUILD=-development \
            --build-arg POSTGREST_TAG=$POSTGREST_TAG \
            --build-arg OPENRESTY_TAG=$OPENRESTY_TAG \
            -t subzerocloud/subzero-development .
      -
        name: Tag and push images
        env:
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          docker tag $PRODUCTION_REGISTRY/subzero:latest $PRODUCTION_REGISTRY/subzero:$VERSION
          docker tag subzerocloud/subzero-development:latest subzerocloud/subzero-development:$VERSION
          docker push $PRODUCTION_REGISTRY/subzero:$VERSION
          docker push subzerocloud/subzero-development:$VERSION
          docker push $PRODUCTION_REGISTRY/subzero:latest
          docker push subzerocloud/subzero-development:latest



